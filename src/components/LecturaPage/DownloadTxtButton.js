// components/DownloadTxtButton.js
import React from 'react';
import { Button } from 'antd';
import { saveAs } from 'file-saver';

const DownloadTxtButton = ({ campoData, editableData }) => {
  // Funci√≥n para manejar la descarga del archivo de texto
  const handleDescargarTxt = () => {
    // 1Ô∏è‚É£ Reproceso (0 si es false, 1 si es true)
    const reproceso = campoData.reproceso === 'S√≠' ? 1 : 0;

    // 2Ô∏è‚É£ Usar directamente el nombre de la imagen sin modificar
    const nombreImagen = campoData.imagen;

    // 3Ô∏è‚É£ Fecha actual en formato YYMMDD
    const fecha = new Date();
    const YYMMDD = `${fecha.getFullYear().toString().slice(2)}${(fecha.getMonth() + 1).toString().padStart(2, '0')}${fecha.getDate().toString().padStart(2, '0')}`;

    // 4Ô∏è‚É£ Hora actual en formato hhmmss
    const hhmmss = `${fecha.getHours().toString().padStart(2, '0')}${fecha.getMinutes().toString().padStart(2, '0')}${fecha.getSeconds().toString().padStart(2, '0')}`;

    // 5Ô∏è‚É£ Rut (se separa en caracteres y el √∫ltimo d√≠gito se ajusta seg√∫n la regla)
    const rut = campoData.rut ?? '';
    const rutSinDv = rut.slice(0, -1); // Se obtiene el rut sin el d√≠gito verificador
    let dv = rut.slice(-1); // El √∫ltimo d√≠gito (DV)

    // Reemplazamos el d√≠gito verificador seg√∫n las reglas:
    if (dv === 'k' || dv === 'K') {
      dv = '10';
    } else {
      dv = dv.padStart(2, '0'); // Aseguramos que los n√∫meros sean de 2 d√≠gitos
    }

    // Separamos los caracteres del rut y el d√≠gito verificador
    const rutSeparado = rutSinDv.split('').concat(dv).join(',');

    // 6Ô∏è‚É£ C√≥digo interno
    const codInterno = campoData.codInterno ?? '';

    // 7Ô∏è‚É£ N√∫mero de prueba
    const numPrueba = campoData.numPrueba ?? '';

    // 8Ô∏è‚É£ Forma
    const forma = campoData.forma ?? '';

    // 9Ô∏è‚É£ Registros de la tabla (se agregar√°n separados por coma)
    const registrosTabla = editableData
      .map(item => item.registro_leido ?? 'sinRegistro')
      .join(',');

    // üîü Construimos el texto completo en una sola l√≠nea, separados por comas
    const textoCompleto = [
      reproceso,
      nombreImagen,
      YYMMDD,
      hhmmss,
      rutSeparado,
      codInterno,
      numPrueba,
      forma,
      registrosTabla
    ].join(',');

    // 1Ô∏è‚É£1Ô∏è‚É£ Construir el nombre del archivo
    const archivoNombre = `sudcra-manager_${rutSeparado.replace(/,/g, '')}_${YYMMDD}_${hhmmss}.txt`;

    // 1Ô∏è‚É£2Ô∏è‚É£ Creamos el Blob y lo descargamos
    const blob = new Blob([textoCompleto], { type: 'text/plain;charset=utf-8' });
    saveAs(blob, archivoNombre);
  };

  return (
    <Button
      type="primary"
      onClick={handleDescargarTxt}
      style={{ margin: '16px 0' }}
    >
      Descargar txt
    </Button>
  );
};

export default DownloadTxtButton;
