-- ************** consulta y filtrado de datos **************
WITH MONTO_PROMEDIO_ANNO_ANTERIOR AS (
    SELECT 
        ROUND(AVG(MONTO_TOTAL_BONOS)) AS PROMEDIO
    FROM 
        CANT_BONOS_PACIENTES_ANNIO
    WHERE 
        ANNIO_CALCULO = EXTRACT(YEAR FROM SYSDATE) - 1
),
DATOS_PACIENTES AS (
    SELECT 
        P.PAC_RUN,
        P.DV_RUN,
        TRUNC((MONTHS_BETWEEN(SYSDATE, P.FECHA_NACIMIENTO) / 12)) AS EDAD,
        COUNT(BC.ID_BONO) AS CANTIDAD_BONOS,
        NVL(SUM(BC.COSTO), 0) AS MONTO_TOTAL_BONOS,
        SS.DESCRIPCION AS SISTEMA_SALUD
    FROM 
        PACIENTE P
    LEFT JOIN 
        BONO_CONSULTA BC ON P.PAC_RUN = BC.PAC_RUN
    LEFT JOIN 
        SALUD S ON P.SAL_ID = S.SAL_ID
    LEFT JOIN 
        SISTEMA_SALUD SS ON S.TIPO_SAL_ID = SS.TIPO_SAL_ID
    WHERE 
        EXTRACT(YEAR FROM BC.FECHA_BONO) = EXTRACT(YEAR FROM SYSDATE) -- Año actual
        OR BC.FECHA_BONO IS NULL -- Pacientes sin bonos en el periodo
    GROUP BY 
        P.PAC_RUN, P.DV_RUN, P.FECHA_NACIMIENTO, SS.DESCRIPCION
),
DATOS_FILTRADOS AS (
    SELECT 
        D.PAC_RUN,
        D.DV_RUN,
        D.EDAD,
        D.CANTIDAD_BONOS,
        D.MONTO_TOTAL_BONOS,
        D.SISTEMA_SALUD
    FROM 
        DATOS_PACIENTES D, MONTO_PROMEDIO_ANNO_ANTERIOR M
    WHERE 
        D.MONTO_TOTAL_BONOS <= M.PROMEDIO -- Filtrar por promedio
)
SELECT 
    EXTRACT(YEAR FROM SYSDATE) AS ANNIO_CALCULO,
    D.PAC_RUN,
    D.DV_RUN,
    D.EDAD,
    D.CANTIDAD_BONOS,
    D.MONTO_TOTAL_BONOS,
    D.SISTEMA_SALUD
FROM 
    DATOS_FILTRADOS D
ORDER BY 
    D.MONTO_TOTAL_BONOS DESC, -- Ordenar por monto total de bonos (mayor a menor)
    D.EDAD DESC; -- En caso de empate, por edad (mayor a menor)

-- ************** Inserción de datos **************
INSERT INTO CANT_BONOS_PACIENTES_ANNIO (
    ANNIO_CALCULO,
    PAC_RUN,
    DV_RUN,
    EDAD,
    CANTIDAD_BONOS,
    MONTO_TOTAL_BONOS,
    SISTEMA_SALUD
)
WITH MONTO_PROMEDIO_ANNO_ANTERIOR AS (
    SELECT 
        ROUND(AVG(MONTO_TOTAL_BONOS)) AS PROMEDIO
    FROM 
        CANT_BONOS_PACIENTES_ANNIO
    WHERE 
        ANNIO_CALCULO = EXTRACT(YEAR FROM SYSDATE) - 1
),
DATOS_PACIENTES AS (
    SELECT 
        P.PAC_RUN,
        P.DV_RUN,
        TRUNC((MONTHS_BETWEEN(SYSDATE, P.FECHA_NACIMIENTO) / 12)) AS EDAD,
        COUNT(BC.ID_BONO) AS CANTIDAD_BONOS,
        NVL(SUM(BC.COSTO), 0) AS MONTO_TOTAL_BONOS,
        SS.DESCRIPCION AS SISTEMA_SALUD
    FROM 
        PACIENTE P
    LEFT JOIN 
        BONO_CONSULTA BC ON P.PAC_RUN = BC.PAC_RUN
    LEFT JOIN 
        SALUD S ON P.SAL_ID = S.SAL_ID
    LEFT JOIN 
        SISTEMA_SALUD SS ON S.TIPO_SAL_ID = SS.TIPO_SAL_ID
    WHERE 
        EXTRACT(YEAR FROM BC.FECHA_BONO) = EXTRACT(YEAR FROM SYSDATE) -- Año actual
        OR BC.FECHA_BONO IS NULL -- Pacientes sin bonos en el periodo
    GROUP BY 
        P.PAC_RUN, P.DV_RUN, P.FECHA_NACIMIENTO, SS.DESCRIPCION
),
DATOS_FILTRADOS AS (
    SELECT 
        D.PAC_RUN,
        D.DV_RUN,
        D.EDAD,
        D.CANTIDAD_BONOS,
        D.MONTO_TOTAL_BONOS,
        D.SISTEMA_SALUD
    FROM 
        DATOS_PACIENTES D, MONTO_PROMEDIO_ANNO_ANTERIOR M
    WHERE 
        D.MONTO_TOTAL_BONOS <= M.PROMEDIO -- Filtrar por promedio
)
SELECT 
    EXTRACT(YEAR FROM SYSDATE) AS ANNIO_CALCULO,
    D.PAC_RUN,
    D.DV_RUN,
    D.EDAD,
    D.CANTIDAD_BONOS,
    D.MONTO_TOTAL_BONOS,
    D.SISTEMA_SALUD
FROM 
    DATOS_FILTRADOS D
ORDER BY 
    D.MONTO_TOTAL_BONOS DESC, -- Ordenar por monto total de bonos (mayor a menor)
    D.EDAD DESC; -- En caso de empate, por edad (mayor a menor)
